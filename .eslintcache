[{"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\index.js":"1","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\App.js":"2","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\showAddProjectContext.js":"3","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\AddProject\\AddProject.js":"4","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Sidebar.js":"5","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\MainContent\\ProjectOverlay.js":"6","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Navbar\\Navbar.js":"7","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\index.js":"8","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\firebase.js":"9","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\Projects.js":"10","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\openSidebarContext.js":"11","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\selected-project-context.js":"12","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\projects-context.js":"13","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\Task.js":"14","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\AddTaskMain\\AddTaskMain.js":"15","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\tasks-context.js":"16","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\helpers\\index.js":"17","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\firebase-hooks\\index.js":"18","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\IndividualProject.js":"19","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\constants\\index.js":"20","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\SidebarProjectOptions.js":"21","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\loadingDataContext.js":"22","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\LoaderPage\\LoaderPage.js":"23"},{"size":220,"mtime":1617567269247,"results":"24","hashOfConfig":"25"},{"size":1518,"mtime":1620315774881,"results":"26","hashOfConfig":"25"},{"size":510,"mtime":1619293480023,"results":"27","hashOfConfig":"25"},{"size":1894,"mtime":1619306493956,"results":"28","hashOfConfig":"25"},{"size":5347,"mtime":1620231735130,"results":"29","hashOfConfig":"25"},{"size":2158,"mtime":1619307029731,"results":"30","hashOfConfig":"25"},{"size":3451,"mtime":1618774264980,"results":"31","hashOfConfig":"25"},{"size":1153,"mtime":1620314588315,"results":"32","hashOfConfig":"25"},{"size":502,"mtime":1618422153400,"results":"33","hashOfConfig":"25"},{"size":1555,"mtime":1620143600084,"results":"34","hashOfConfig":"25"},{"size":526,"mtime":1617702371893,"results":"35","hashOfConfig":"25"},{"size":547,"mtime":1618398302784,"results":"36","hashOfConfig":"25"},{"size":516,"mtime":1620317117188,"results":"37","hashOfConfig":"25"},{"size":1548,"mtime":1620228283460,"results":"38","hashOfConfig":"25"},{"size":5623,"mtime":1620227321963,"results":"39","hashOfConfig":"25"},{"size":558,"mtime":1620231759315,"results":"40","hashOfConfig":"25"},{"size":1032,"mtime":1619001407838,"results":"41","hashOfConfig":"25"},{"size":4480,"mtime":1620317118186,"results":"42","hashOfConfig":"25"},{"size":3291,"mtime":1620133793973,"results":"43","hashOfConfig":"25"},{"size":149,"mtime":1618225907737,"results":"44","hashOfConfig":"25"},{"size":1414,"mtime":1619273201673,"results":"45","hashOfConfig":"25"},{"size":494,"mtime":1620314949947,"results":"46","hashOfConfig":"25"},{"size":904,"mtime":1620317716219,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1dnn2gx",{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\index.js",[],["108","109"],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\App.js",["110","111","112","113","114"],"import {useContext} from 'react'\nimport './App.css';\nimport ProjectOverlay from './components/MainContent/ProjectOverlay';\nimport Navbar from './components/Navbar/Navbar'\nimport Sidebar from './components/Sidebar/Sidebar'\nimport LoaderPage from './components/LoaderPage/LoaderPage'\nimport Loader from 'react-loader-spinner'\nimport {OpenSidebarProvider,SelectedProjectProvider, ProjectsContextProvider, TasksContextProvider, LoadingDataContextProvider} from './context'\nimport {useShowAddProjectValue, useLoadingDataValue} from './context'\nimport AddProject from './components/Sidebar/Projects/AddProject/AddProject'\nimport { ShowAddProjectProvider } from './context/showAddProjectContext';\nfunction App() {\n\n\n\n  return (\n    <LoadingDataContextProvider>\n      <ProjectsContextProvider>\n        <SelectedProjectProvider>\n          <TasksContextProvider>  \n            <OpenSidebarProvider>\n              <ShowAddProjectProvider>\n                <div className=\"App\">\n                <LoaderPage/>\n                <Navbar/>\n                <div className=\"main-content\">\n                  <Sidebar/>\n                  <ProjectOverlay/>      \n                          \n                </div>\n                  \n                  \n                  \n                </div>)\n              </ShowAddProjectProvider>\n            </OpenSidebarProvider>\n          </TasksContextProvider>\n        </SelectedProjectProvider>\n      </ProjectsContextProvider>\n    </LoadingDataContextProvider>\n   \n   \n  );\n}\n\nexport default App;\n","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\showAddProjectContext.js",[],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\AddProject\\AddProject.js",["115","116","117","118"],"import React,{useState, useEffect,useRef}  from 'react'\r\nimport {firebase} from '../../../../firebase'\r\nimport {generatePushId} from '../../../../helpers'\r\nimport {useProjectsValue,useShowAddProjectValue} from '../../../../context'\r\nimport './AddProject.css'\r\n\r\nfunction AddProject() {\r\n    const addProjectRef= useRef()\r\n    const [projectName, setProjectName]= useState('')\r\n    const {projects, setProjects}= useProjectsValue()\r\n    const {showAddProject,setShowAddProject}= useShowAddProjectValue()\r\n    \r\n    const projectId= generatePushId()\r\n\r\n    \r\n    const addProject=()=>{\r\n        firebase.\r\n            firestore()\r\n            .collection('projects')\r\n            .add({\r\n                projectId,\r\n                name: projectName,\r\n                userId:'2irjij20349cuu204', \r\n            })\r\n            .then(()=>{\r\n                setProjects([...projects])\r\n                setProjectName('')\r\n                setShowAddProject(false)\r\n            })\r\n    \r\n   \r\n        \r\n    }\r\n\r\n    const handleShowAddProject=e=>{\r\n        if (addProjectRef && addProjectRef.current.contains(e.target)) return\r\n\r\n        setShowAddProject(false)\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n       document.addEventListener('mousedown', handleShowAddProject)\r\n\r\n       return ()=>document.removeEventListener('mousedown', handleShowAddProject)\r\n    },[])\r\n\r\n\r\n  \r\n    return (\r\n        <>\r\n\r\n            <div className=\"add-project\">\r\n                <form ref={addProjectRef} className=\"add-project__form\">\r\n                    <input name=\"Name\"  value={projectName} onChange={e=>setProjectName(e.target.value)}/>\r\n                    <button className=\"add-project__submit\">\r\n                        Add Project\r\n                    </button>  \r\n\r\n                </form>\r\n                        \r\n            </div>\r\n        \r\n            \r\n        </>\r\n    )\r\n}\r\nexport default AddProject\r\n","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Sidebar.js",["119","120","121","122","123","124","125","126"],"import React, {useState, useEffect} from 'react'\r\nimport './Sidebar.css'\r\nimport {VscInbox} from 'react-icons/vsc'\r\nimport {IoTodayOutline, IoCalendarOutline} from 'react-icons/io5'\r\nimport {useOpenSidebarValue, useShowAddProjectValue} from '../../context'\r\nimport {AiOutlneArrowRight, AiOutlineDown, AiOutlineRight,AiOutlinePlus} from 'react-icons/ai'\r\nimport Projects from './Projects/Projects'\r\nimport {useSelectedProjectValue, useTasksValue} from '../../context'\r\nimport AddProject from './Projects/AddProject/AddProject'\r\nconst Sidebar=()=> {\r\n\r\n    const [openProjects, setOpenProjects]=useState(false)\r\n    const [openLabels, setOpenLabels]= useState(false)\r\n    const [openFilters, setOpenFilters]= useState(false)\r\n    const [active,setActive]= useState('inbox')\r\n    const {openSidebar} = useOpenSidebarValue()\r\n    const {showAddProject,setShowAddProject}= useShowAddProjectValue()\r\n    const handleOpenProjects=()=>setOpenProjects(!openProjects)\r\n    const handleOpenLabels=()=>setOpenLabels(!openLabels)\r\n    const handleOpenFilters=()=>setOpenFilters(!openFilters)\r\n    const {allTasks,setAllTasks, totalTasks, setTotalTasks}=useTasksValue()\r\n    \r\n\r\n    \r\n    \r\n    // console.log(openSidebar)\r\n    return (\r\n        <>\r\n            <div className={`sidebar ${openSidebar ?\"show\":\"hidden-sidebar\"}`}>\r\n                <ul className=\"sidebar__times\">\r\n                    <li className ={`sidebar-inbox ${active==='inbox'? 'active': undefined}`}\r\n                        onClick={()=>setActive('inbox')}\r\n\r\n                    >\r\n                        <span className=\"sidebar-icon\"><VscInbox/></span>\r\n                        <span className=\"time-label\">Inbox </span>\r\n                        <span className=\"no_tasks\">{allTasks.length} </span>\r\n                    </li>\r\n                    <li className= {`sidebar-today ${active==='today'? 'active': undefined}`}\r\n                        onClick={()=>setActive('today')}\r\n                    >\r\n                        <span className=\"sidebar-icon\"><IoTodayOutline/></span>\r\n                        <span  className=\"time-label\">Today</span>\r\n                    </li>\r\n                    <li className={`sidebar-upcoming ${active==='upcoming'? 'active': undefined}`}\r\n                        onClick={()=>setActive('upcoming')}\r\n                    >\r\n                        <span className=\"sidebar-icon\"><IoCalendarOutline/></span>\r\n                        <span className=\"time-label\">Upcoming</span>  \r\n                    </li>\r\n                </ul>\r\n\r\n\r\n\r\n                <div className=\"sidebar__options\">\r\n                    <div className=\"sidebar-projects\">\r\n                        <div className=\"sidebar-projects-icons\">\r\n                            <span className=\"open-icon\"\r\n                                onClick={handleOpenProjects}\r\n                            >\r\n                                {openProjects?<AiOutlineDown/>: <AiOutlineRight/>}\r\n                            </span>\r\n                            <span className=\"sidebar__option-label\">\r\n                                Projects    \r\n                            </span>\r\n\r\n\r\n                            <span className=\"sidebar__add-project\"\r\n                                onClick={()=>setShowAddProject(true)}\r\n                            >\r\n                                <AiOutlinePlus/>\r\n                            </span>\r\n                        </div>\r\n\r\n                        {openProjects && (\r\n                            <ul className=\"projects\">\r\n                                <Projects/>\r\n                            </ul>\r\n                            )\r\n                        }\r\n                        \r\n                        \r\n\r\n                    \r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"sidebar-labels\">\r\n                        <span className=\"open-icon\"\r\n                            onClick={handleOpenLabels}\r\n                        >\r\n                            {openLabels?<AiOutlineDown/>: <AiOutlineRight/>}\r\n                        </span>\r\n                        <span className=\"sidebar__option-label\">\r\n                            Labels\r\n                        </span>\r\n\r\n                        <span className=\"sidebar__add-project\">\r\n                            <AiOutlinePlus/>\r\n                        </span>\r\n\r\n                        <ul></ul>\r\n                    </div>\r\n                    <div className=\"sidebar-filters\">\r\n                        <span className=\"open-icon\"\r\n                            onClick={handleOpenFilters}\r\n                        >\r\n                            {openFilters?<AiOutlineDown/>: <AiOutlineRight/>}\r\n                        </span>\r\n                        <span className=\"sidebar__option-label\">\r\n                            Filters\r\n                        </span>\r\n\r\n                        <span className=\"sidebar__add-project\">\r\n                            <AiOutlinePlus/>\r\n                        </span>\r\n\r\n                    \r\n                    </div>\r\n                    \r\n                \r\n                \r\n                </div>\r\n\r\n                \r\n\r\n            \r\n                \r\n            </div>\r\n\r\n            {/* {showAddProject && <AddProject/>} */}\r\n            \r\n\r\n        </>\r\n    )\r\n}\r\nexport default Sidebar\r\n","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\MainContent\\ProjectOverlay.js",["127","128","129"],"import React, {useState, useEffect } from 'react'\r\nimport './ProjectOverlay.css'\r\nimport {useSelectedProjectValue, useShowAddProjectValue} from '../../context'\r\nimport {useTasks} from '../../firebase-hooks'\r\nimport Task from '../Sidebar/Projects/Task'\r\nimport {AiOutlinePlus} from 'react-icons/ai'\r\nimport {useOpenSidebarValue} from '../../context'\r\nimport AddProject from '../Sidebar/Projects/AddProject/AddProject'\r\n\r\n\r\nimport AddTaskMain from '../Sidebar/Projects/AddTaskMain/AddTaskMain'\r\nconst ProjectOverlay=()=> {\r\n\r\n    const {selectedProject} = useSelectedProjectValue()\r\n    const {tasks, setTasks}= useTasks(selectedProject.projectId)\r\n    const {openSidebar} = useOpenSidebarValue()\r\n    const [showAddTask, setShowAddTask]= useState(false)\r\n    const {showAddProject,setShowAddProject}= useShowAddProjectValue()\r\n    return (\r\n        <>\r\n            <div className={openSidebar?\"project-overlay-container\":\"project-overlay-container-full\"}>\r\n                <div className=\"p-o-header\">{selectedProject.name}</div>\r\n                <div className=\"pO_task-list\">\r\n                    <ul className=\"project-overlay__tasks\">\r\n                        {tasks.map(task=>(\r\n                            <li className=\"project-overlay-task\">\r\n                                <Task task={task}/>\r\n                            </li>    \r\n                        ))}\r\n\r\n                    </ul>\r\n                </div>\r\n            \r\n                {showAddTask? \r\n                    <AddTaskMain setShowAddTask={setShowAddTask}/>:\r\n                    <div className=\"pO-add-task\"\r\n                        role=\"button\"\r\n                        tabIndex={0}\r\n                        onClick={()=>setShowAddTask(true)}\r\n                    >\r\n                        <span>\r\n                            <AiOutlinePlus className=\"pO-add-task-plus\"/>\r\n                            <p className=\"pO-add-task-name\">Add Task</p>\r\n                        </span>\r\n                    </div>\r\n                \r\n                }   \r\n\r\n            </div>\r\n            {showAddProject &&<AddProject/>}   \r\n    </>\r\n    )\r\n}\r\n\r\nexport default ProjectOverlay\r\n\r\n\r\n","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Navbar\\Navbar.js",["130","131"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport {FaBars} from 'react-icons/fa'\r\nimport {AiOutlineMenu, AiOutlinePlus, AiOutlineSearch} from 'react-icons/ai'\r\nimport {CgHome, CgProfile} from 'react-icons/cg'\r\nimport {IoIosTrendingUp} from 'react-icons/io'\r\nimport {VscBellDot} from 'react-icons/vsc'\r\nimport {BsQuestionCircle} from 'react-icons/bs'\r\n\r\nimport {useOpenSidebarValue} from '../../context'\r\nimport './Navbar.css'\r\nfunction Navbar() {\r\n    const [searchValue, setSearchValue] = useState('')\r\n    const [searchFocus, setSearchFocus]= useState(false)\r\n    const {openSidebar, setOpenSidebar, handleSidebar} = useOpenSidebarValue()\r\n\r\n    const searchInput= useRef()\r\n    const clearSearchFocus=(e)=>{\r\n        if (e.target!==searchInput.current){\r\n            setSearchFocus(false)\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        document.addEventListener('click', clearSearchFocus)\r\n\r\n        return ()=> document.removeEventListener('click', clearSearchFocus)\r\n\r\n    },[])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"navbar-inner\">\r\n                <ul className=\"navbar__section1\">\r\n                    <li className=\"navbar__section1-icon\"\r\n                        data-testid=\"navbar-menu-bars\"\r\n                        onClick={()=>{\r\n                            \r\n                            setOpenSidebar(!openSidebar)\r\n                            \r\n                            }\r\n                            \r\n                        }\r\n                        \r\n                    >\r\n                        <AiOutlineMenu/>\r\n                    </li>\r\n                    <li className=\"navbar__section1-icon\"><CgHome/></li>\r\n        \r\n                    <div\r\n                        role=\"button\"  \r\n                        className={openSidebar? \"hidden\":\"navbar__section1-search\"}\r\n                        onFocus={()=>setSearchFocus(true)}\r\n                    >\r\n                        <span className={searchFocus?\"hidden\": \"search-icon\"}>\r\n                            <AiOutlineSearch/>\r\n                        </span>\r\n                        <input value={searchValue} type=\"text\"\r\n                            ref={searchInput}\r\n                            onChange={(e)=>setSearchValue(e.target.value)}\r\n                            className={searchFocus? \"navbar__section1-searchInput-white\":\"navbar__section1-searchInput\"}\r\n                            data-testid=\"navbar-search\"\r\n                            placeholder=\"Find\"\r\n                                                    \r\n                            \r\n                        />\r\n                    </div>\r\n                    \r\n                </ul>\r\n\r\n            \r\n                <div className=\"navbar__section2\">\r\n                    <ul>\r\n                        <li className=\"navbar__section2-icon\"><AiOutlinePlus/></li>\r\n                        <li className=\"navbar__section2-icon\"><IoIosTrendingUp/></li>\r\n                        <li className=\"navbar__section2-icon\"><BsQuestionCircle/></li>\r\n                        <li className=\"navbar__section2-icon\"><VscBellDot/></li>\r\n                        <li className=\"navbar__section2-icon-profile\"><CgProfile/></li>\r\n                    \r\n                    </ul>\r\n                \r\n\r\n                \r\n\r\n\r\n\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\index.js",["132"],"import{\r\n    OpenSidebarProvider,\r\n    OpenSidebarContext,\r\n    useOpenSidebarValue,\r\n\r\n} from './openSidebarContext'\r\n\r\n\r\nimport {\r\n    useShowAddProjectValue,\r\n    ShowAddProjectProvider\r\n} from './showAddProjectContext'\r\nimport {\r\n    SelectedProjectProvider,\r\n    SelectedProjectContext,\r\n    useSelectedProjectValue\r\n\r\n} from './selected-project-context'\r\n\r\nimport {\r\n    ProjectsContextProvider,\r\n    ProjectsContext,\r\n    useProjectsValue,\r\n\r\n} from './projects-context'\r\n\r\n\r\nimport{\r\n    useTasksValue,\r\n    TasksContext,\r\n    TasksContextProvider\r\n} from './tasks-context'\r\n\r\n \r\nimport {\r\n    LoadingDataContext,\r\n    LoadingDataContextProvider,\r\n    useLoadingDataValue\r\n} from './loadingDataContext'\r\n\r\n\r\n\r\nexport {useOpenSidebarValue, \r\n    OpenSidebarProvider,\r\n    OpenSidebarContext,\r\n    SelectedProjectContext,\r\n    SelectedProjectProvider,\r\n    useSelectedProjectValue,\r\n    useProjectsValue,\r\n    ProjectsContext,\r\n    ProjectsContextProvider,\r\n    useShowAddProjectValue,\r\n    useTasksValue,\r\n    TasksContext,\r\n    TasksContextProvider,\r\n    LoadingDataContext,\r\n    LoadingDataContextProvider,\r\n    useLoadingDataValue\r\n\r\n    \r\n}\r\n","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\firebase.js",[],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\Projects.js",[],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\openSidebarContext.js",["133"],"import React, {createContext, useState, useContext} from 'react'\r\n\r\nexport const OpenSidebarContext= createContext()\r\n\r\nexport const OpenSidebarProvider= ({children})=>{\r\n    const [openSidebar, setOpenSidebar]= useState(true)\r\n    const handleSidebar=()=> setOpenSidebar(!openSidebar)\r\n\r\n    return (\r\n        <OpenSidebarContext.Provider value={{openSidebar, setOpenSidebar}}>\r\n            {children}\r\n        </OpenSidebarContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport const useOpenSidebarValue=()=> useContext(OpenSidebarContext)","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\selected-project-context.js",[],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\projects-context.js",[],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\Task.js",["134","135","136","137","138","139"],"import React, {useState} from 'react'\r\nimport {firebase} from '../../../firebase'\r\nimport {FaRegCheckCircle, FaRegCircle} from 'react-icons/fa'\r\nimport {GrCheckmark} from 'react-icons/gr'\r\nimport {useTasks} from '../../../firebase-hooks'\r\nimport {useTasksValue, useProjectsValue} from '../../../context'\r\nimport './Task.css'\r\n\r\nfunction Task({task}) {\r\n    const [edit, setToggleEdit]= useState(false)\r\n    const [displayCheck, setDisplayCheck]= useState(false)\r\n    const {allTasks, setAllTasks}= useTasksValue()\r\n    const {projects}= useProjectsValue()\r\n    \r\n    \r\n    \r\n    const deleteTask=(docId)=>{\r\n        firebase\r\n            .firestore()\r\n            .collection('tasks')\r\n            .doc(docId)  \r\n            .delete()\r\n            .then(()=>{\r\n                setAllTasks([...allTasks])\r\n                console.log('deleted')  \r\n            })\r\n    }\r\n    \r\n    return (\r\n        <div className=\"pO-task\"> \r\n            <span\r\n                className=\"pO-task__taskCheck\"\r\n                onMouseEnter={(e)=>setDisplayCheck(true)}\r\n                onMouseLeave={(e)=> setDisplayCheck(false)}\r\n                role=\"button\"\r\n                tabIndex={0}\r\n                onClick={()=>{\r\n                    deleteTask(task.id)\r\n                    console.log(task.id)\r\n                }\r\n                }\r\n            >\r\n                {displayCheck? <GrCheckmark/>: null} \r\n            </span>\r\n            <span className=\"pO-task__taskName\">{task.task}</span>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\AddTaskMain\\AddTaskMain.js",["140","141"],"import React, {useState} from 'react'\r\nimport {IoCalendarClearOutline, IoIosCalendar} from 'react-icons/io'\r\nimport {MdLabelOutline} from 'react-icons/md'\r\nimport moment from 'moment'\r\nimport './AddTaskMain.css'\r\nimport {firebase} from '../../../../firebase'\r\nimport { useSelectedProjectValue} from '../../../../context'\r\nimport { VscInbox } from 'react-icons/vsc'\r\nimport {generatePushId} from '../../../../helpers'\r\n\r\n\r\nfunction AddTaskMain({setShowAddTask}) {\r\n    const [task, setTask]= useState('')\r\n    const [taskDate, setTaskDate]= useState('')\r\n    const [project, setProject]= useState('')\r\n    const {selectedProject}= useSelectedProjectValue()\r\n    const [dateSet,setDateSet]= useState(false)\r\n    const [activeDateButton, setActiveDateButton]= useState('')\r\n    \r\n\r\n\r\n    \r\n    const addtask=()=>{\r\n        let projectId= project||selectedProject\r\n        let filterDate = ''\r\n        projectId= selectedProject? selectedProject.projectId: ''\r\n        \r\n        \r\n        // if(projectId === 'TODAY'){\r\n        //     filterDate= moment().format('DD/MM/YYYY')\r\n        // } else{\r\n        //     filterDate=''\r\n        // }\r\n    \r\n        return(\r\n            task&&\r\n            projectId&&\r\n            firebase\r\n                .firestore()\r\n                .collection('tasks')\r\n                .add({\r\n                    archived:false,\r\n                    date:dateSet? taskDate:filterDate,\r\n                    projectId,\r\n                    task,\r\n                    userId: '2irjij20349cuu204'\r\n                })\r\n                .then(()=>{\r\n                    console.log('adding')\r\n                    setTask('')\r\n                    setProject('')\r\n                    setShowAddTask(false)\r\n                })\r\n\r\n        )\r\n    \r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h1>{taskDate}</h1>\r\n            <div className=\"add-task-main\">\r\n                <input \r\n                    className=\"add-task-main__taskName\"\r\n                    name=\"taskName\" \r\n                    value={task}\r\n                    type=\"text\" \r\n                    onChange={(e)=> setTask(e.target.value)}\r\n                    aria-label=\"Enter your task\"\r\n                    placeholder=\"Enter your task name here\"\r\n                    data-testid=\"add-task-content\"\r\n                />\r\n                <div className=\"atm-timeFilter-icons\">\r\n                    <span className={activeDateButton==='today' ?\"atm-calendar active\": \"atm-calendar\"}\r\n                        role=\"button\"\r\n                        tabIndex={0}\r\n                        onClick={()=>{\r\n                            if(activeDateButton==='today'){\r\n                                \r\n                                console.log('clearing button')\r\n                                setTaskDate('')\r\n                                setActiveDateButton('')\r\n                                setDateSet(false)\r\n                                \r\n                            } else{\r\n                                \r\n                                setTaskDate(moment().format('DD/MM/YYYY'))\r\n                                console.log(taskDate)\r\n                                setActiveDateButton('today')\r\n                                setDateSet(true)\r\n                               \r\n                            }      \r\n                            }\r\n                        }\r\n\r\n                    >\r\n                        <IoIosCalendar/>\r\n                        <p>Today</p>\r\n                    </span>\r\n                    <span className= {activeDateButton===\"inbox\" ?\"atm-inbox active\": \"atm-inbox\"}\r\n                        role=\"button\"\r\n                        tabIndex={0}\r\n                        onClick={()=>{\r\n                            if(activeDateButton==='inbox'){\r\n                                setTaskDate('')\r\n                                console.log('clearing button')\r\n                                setActiveDateButton('')\r\n                                setDateSet(false)\r\n                            } else{\r\n                                setTaskDate('')\r\n                                setActiveDateButton('inbox')\r\n                                setDateSet(true)\r\n                               \r\n                            }      \r\n                            }\r\n                        }\r\n                          \r\n\r\n                    >\r\n                        <VscInbox/>\r\n                        <p>Inbox</p>\r\n                    </span>\r\n                    <div className=\"atm-label\">\r\n                        <MdLabelOutline className=\"atm-label-icon\" />\r\n                    </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"atm-submit-cancel\">\r\n            <button \r\n                className=\"atm-submit-task\"\r\n                tabIndex={0}\r\n                onKeyDown={(e)=>{\r\n                    if (e.key===\"Enter\"){\r\n                        addtask()\r\n                    }\r\n                }}\r\n                onClick={()=>addtask()}\r\n            >\r\n                Add Task\r\n            </button>\r\n            <p \r\n                className=\"atm-cancel-submit-task\"\r\n                tabIndex={0}\r\n                onKeyDown={(e)=>{\r\n                    if (e.key===\"Enter\"){\r\n                        setTask('')\r\n                        setTaskDate('')\r\n                        setShowAddTask(false)\r\n                    }\r\n                }}\r\n                onClick={()=>setShowAddTask(false)}\r\n            >\r\n                Cancel\r\n            </p>\r\n\r\n        </div>\r\n        \r\n    </>\r\n    )\r\n}\r\n\r\nexport default AddTaskMain\r\n","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\tasks-context.js",["142","143"],"import React, {useState, useEffect, createContext, useContext} from 'react'\r\nimport {useGetAllTasks} from '../firebase-hooks'\r\n \r\n\r\nexport const TasksContext= createContext()\r\n\r\nexport const TasksContextProvider= ({children})=>{\r\n    const {allTasks, setAllTasks, totalTasks, setTotalTasks}= useGetAllTasks()\r\n\r\n\r\n\r\n    return(\r\n        <TasksContext.Provider value={{allTasks, setAllTasks, totalTasks, setTotalTasks}}>\r\n            {children}\r\n        </TasksContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useTasksValue=()=> useContext(TasksContext)\r\n\r\n\r\n \r\n\r\n","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\helpers\\index.js",[],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\firebase-hooks\\index.js",["144"],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\IndividualProject.js",["145","146","147","148"],"import React, {useState, useRef, useEffect} from 'react'\r\nimport {FaTrashAlt} from 'react-icons/fa'\r\nimport {GrCheckmark} from 'react-icons/gr'\r\nimport {BiDotsHorizontalRounded} from 'react-icons/bi'\r\nimport {firebase} from '../../../firebase'\r\nimport './Project.css'\r\nimport {useProjectsValue, useSelectedProjectValue} from '../../../context'\r\nimport SidebarProjectOptions from './SidebarProjectOptions'\r\n\r\n\r\nexport const IndividualProject= ({project})=> {\r\n\r\n\r\n    const [showConfirmDelete, setShowConfirmDelete] = useState(false)\r\n    const [showSidebarProjectOptions, setShowSidebarProjectOptions]= useState(false)\r\n    const [openSidebarProjectOptions, setOpenSidebarProjectOptions]= useState(false)\r\n    const {projects, setProjects}= useProjectsValue()\r\n    const {setSelectedProject}= useSelectedProjectValue()\r\n    const deleteModalRef= useRef()\r\n\r\n   \r\n\r\n    const deleteProject=(docId)=>{\r\n        firebase\r\n            .firestore()\r\n            .collection('projects')\r\n            .doc(docId)\r\n            .delete()\r\n            .then(()=>{\r\n                setProjects([...projects])\r\n                setSelectedProject('INBOX')\r\n\r\n            })\r\n    }\r\n\r\n    const handleDeleteModal=e=>{\r\n        if (deleteModalRef.current.contains(e.target)) return\r\n        \r\n        setShowConfirmDelete(false)\r\n        \r\n    }\r\n    useEffect(()=>{\r\n        document.addEventListener(\"mousedown\", handleDeleteModal)\r\n        \r\n        return () => document.removeEventListener(\"mousedown\", handleDeleteModal)\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"sidebar__individual-project\"\r\n            onMouseEnter={()=>{\r\n                setShowSidebarProjectOptions(true)\r\n                // console.log(showSidebarProjectOptions)\r\n                }\r\n            \r\n            }\r\n            onMouseLeave={()=>setShowSidebarProjectOptions(false)}\r\n            tabIndex={0}\r\n        >\r\n            <span className=\"project__dot-container\">\r\n                <div className=\"project-dot\"></div>\r\n            </span>\r\n            <span className=\"sidebar__project-name\">{project.name}</span>\r\n            \r\n            <div className=\"sidebar__project-delete-span\"\r\n                onClick={()=>{\r\n                    setOpenSidebarProjectOptions(!openSidebarProjectOptions)\r\n                    console.log(showConfirmDelete)\r\n                }\r\n                }\r\n            >\r\n                <BiDotsHorizontalRounded/>\r\n\r\n                   \r\n            </div>\r\n\r\n            {openSidebarProjectOptions && <SidebarProjectOptions project={project} setOpenSidebarProjectOptions={setOpenSidebarProjectOptions} setShowConfirmDelete={setShowConfirmDelete}/>}\r\n\r\n           \r\n            \r\n            <div ref={deleteModalRef} className={showConfirmDelete? \"delete-modal\":\"hidden\"} ref={deleteModalRef}>\r\n                <p>Are you sure you want to delete this project?</p>\r\n                <span className=\"delete-modal-buttons\">\r\n                    <button onClick={()=>deleteProject(project.docId)}>Delete</button>\r\n                    <button onClick={()=> setShowConfirmDelete(false)}>Cancel</button>\r\n                </span>\r\n                \r\n            </div>           \r\n            \r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndividualProject\r\n","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\constants\\index.js",[],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\SidebarProjectOptions.js",["149","150"],"import React, {useState, useRef, useEffect} from 'react'\r\n\r\nimport  {BsArchive, BsTrash} from 'react-icons/bs'\r\nimport './SidebarProjectOptions.css'\r\n\r\nfunction SidebarProjectOptions({project, setOpenSidebarProjectOptions, setShowConfirmDelete}) {\r\n    const projectOptionsMenu= useRef()\r\n    const handleSidebarProjectOptionsMenu=e=>{\r\n        if (projectOptionsMenu.current.contains(e.target)) return\r\n\r\n        setOpenSidebarProjectOptions(false)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        document.addEventListener('mousedown', handleSidebarProjectOptionsMenu)\r\n        return ()=>document.removeEventListener('mousedown', handleSidebarProjectOptionsMenu)\r\n    }, [])\r\n    return (\r\n        <div ref={projectOptionsMenu} className=\"sidebar-project-options-container\">\r\n            <ul className=\"sidebar-project-options\">\r\n                <li>\r\n                    <span><BsArchive/></span>\r\n                    <span>Archive Project</span>\r\n                    \r\n                </li>\r\n                <li\r\n                    onClick={()=>setShowConfirmDelete(true)}\r\n                    tabIndex={0}\r\n                    role=\"button\"\r\n                >\r\n                    <span><BsTrash/></span>\r\n                    <span>Delete Project</span>\r\n                    \r\n                </li>\r\n                \r\n            </ul>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarProjectOptions\r\n","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\loadingDataContext.js",[],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\LoaderPage\\LoaderPage.js",["151","152"],"import React from 'react'\r\nimport { AiOutlineConsoleSql } from 'react-icons/ai'\r\nimport {useLoadingDataValue} from '../../context'\r\nimport Loader from \"react-loader-spinner\";\r\nimport {useProjectsValue} from '../../context/'\r\nimport './LoaderPage.css'\r\n\r\nconst LoaderPage=() =>{\r\n    const {loadedProjects}= useProjectsValue()\r\n   \r\n\r\n    \r\n    return(\r\n\r\n        <div>\r\n            {!loadedProjects&& (\r\n                <div  className=\"loader-container\">\r\n                    <Loader\r\n                        className=\"loader\"\r\n                        type=\"TailSpin\"\r\n                        color=\"#00BFFF\"\r\n                        height={100}\r\n                        width={100}\r\n                        timeout={5000}\r\n                    \r\n                    />\r\n                </div>\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n            \r\n}\r\n    \r\n\r\n\r\nexport default LoaderPage\r\n",{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":1,"column":9,"nodeType":"159","messageId":"160","endLine":1,"endColumn":19},{"ruleId":"157","severity":1,"message":"161","line":7,"column":8,"nodeType":"159","messageId":"160","endLine":7,"endColumn":14},{"ruleId":"157","severity":1,"message":"162","line":9,"column":9,"nodeType":"159","messageId":"160","endLine":9,"endColumn":31},{"ruleId":"157","severity":1,"message":"163","line":9,"column":33,"nodeType":"159","messageId":"160","endLine":9,"endColumn":52},{"ruleId":"157","severity":1,"message":"164","line":10,"column":8,"nodeType":"159","messageId":"160","endLine":10,"endColumn":18},{"ruleId":"157","severity":1,"message":"165","line":11,"column":12,"nodeType":"159","messageId":"160","endLine":11,"endColumn":26},{"ruleId":"157","severity":1,"message":"166","line":16,"column":11,"nodeType":"159","messageId":"160","endLine":16,"endColumn":21},{"ruleId":"167","severity":1,"message":"168","line":17,"column":17,"nodeType":"169","messageId":"170","endLine":17,"endColumn":18,"fix":"171"},{"ruleId":"172","severity":1,"message":"173","line":46,"column":7,"nodeType":"174","endLine":46,"endColumn":9,"suggestions":"175"},{"ruleId":"157","severity":1,"message":"176","line":1,"column":26,"nodeType":"159","messageId":"160","endLine":1,"endColumn":35},{"ruleId":"157","severity":1,"message":"177","line":6,"column":9,"nodeType":"159","messageId":"160","endLine":6,"endColumn":27},{"ruleId":"157","severity":1,"message":"178","line":8,"column":9,"nodeType":"159","messageId":"160","endLine":8,"endColumn":32},{"ruleId":"157","severity":1,"message":"164","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":18},{"ruleId":"157","severity":1,"message":"165","line":17,"column":12,"nodeType":"159","messageId":"160","endLine":17,"endColumn":26},{"ruleId":"157","severity":1,"message":"179","line":21,"column":21,"nodeType":"159","messageId":"160","endLine":21,"endColumn":32},{"ruleId":"157","severity":1,"message":"180","line":21,"column":34,"nodeType":"159","messageId":"160","endLine":21,"endColumn":44},{"ruleId":"157","severity":1,"message":"181","line":21,"column":46,"nodeType":"159","messageId":"160","endLine":21,"endColumn":59},{"ruleId":"157","severity":1,"message":"176","line":1,"column":26,"nodeType":"159","messageId":"160","endLine":1,"endColumn":35},{"ruleId":"157","severity":1,"message":"182","line":15,"column":19,"nodeType":"159","messageId":"160","endLine":15,"endColumn":27},{"ruleId":"157","severity":1,"message":"183","line":18,"column":27,"nodeType":"159","messageId":"160","endLine":18,"endColumn":44},{"ruleId":"157","severity":1,"message":"184","line":2,"column":9,"nodeType":"159","messageId":"160","endLine":2,"endColumn":15},{"ruleId":"157","severity":1,"message":"185","line":14,"column":41,"nodeType":"159","messageId":"160","endLine":14,"endColumn":54},{"ruleId":"157","severity":1,"message":"186","line":11,"column":5,"nodeType":"159","messageId":"160","endLine":11,"endColumn":27},{"ruleId":"157","severity":1,"message":"185","line":7,"column":11,"nodeType":"159","messageId":"160","endLine":7,"endColumn":24},{"ruleId":"157","severity":1,"message":"187","line":3,"column":9,"nodeType":"159","messageId":"160","endLine":3,"endColumn":25},{"ruleId":"157","severity":1,"message":"188","line":3,"column":27,"nodeType":"159","messageId":"160","endLine":3,"endColumn":38},{"ruleId":"157","severity":1,"message":"189","line":5,"column":9,"nodeType":"159","messageId":"160","endLine":5,"endColumn":17},{"ruleId":"157","severity":1,"message":"190","line":10,"column":12,"nodeType":"159","messageId":"160","endLine":10,"endColumn":16},{"ruleId":"157","severity":1,"message":"191","line":10,"column":18,"nodeType":"159","messageId":"160","endLine":10,"endColumn":31},{"ruleId":"157","severity":1,"message":"192","line":13,"column":12,"nodeType":"159","messageId":"160","endLine":13,"endColumn":20},{"ruleId":"157","severity":1,"message":"193","line":2,"column":9,"nodeType":"159","messageId":"160","endLine":2,"endColumn":31},{"ruleId":"157","severity":1,"message":"194","line":9,"column":9,"nodeType":"159","messageId":"160","endLine":9,"endColumn":23},{"ruleId":"157","severity":1,"message":"195","line":1,"column":16,"nodeType":"159","messageId":"160","endLine":1,"endColumn":24},{"ruleId":"157","severity":1,"message":"176","line":1,"column":26,"nodeType":"159","messageId":"160","endLine":1,"endColumn":35},{"ruleId":"157","severity":1,"message":"196","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"157","severity":1,"message":"197","line":2,"column":9,"nodeType":"159","messageId":"160","endLine":2,"endColumn":19},{"ruleId":"157","severity":1,"message":"198","line":3,"column":9,"nodeType":"159","messageId":"160","endLine":3,"endColumn":20},{"ruleId":"157","severity":1,"message":"199","line":15,"column":12,"nodeType":"159","messageId":"160","endLine":15,"endColumn":37},{"ruleId":"200","severity":1,"message":"201","line":81,"column":94,"nodeType":"202","messageId":"203","endLine":81,"endColumn":114},{"ruleId":"157","severity":1,"message":"195","line":1,"column":16,"nodeType":"159","messageId":"160","endLine":1,"endColumn":24},{"ruleId":"172","severity":1,"message":"204","line":17,"column":8,"nodeType":"174","endLine":17,"endColumn":10,"suggestions":"205"},{"ruleId":"157","severity":1,"message":"206","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":29},{"ruleId":"157","severity":1,"message":"163","line":3,"column":9,"nodeType":"159","messageId":"160","endLine":3,"endColumn":28},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Loader' is defined but never used.","'useShowAddProjectValue' is defined but never used.","'useLoadingDataValue' is defined but never used.","'AddProject' is defined but never used.","'showAddProject' is assigned a value but never used.","'addProject' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"209","text":"210"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleShowAddProject'. Either include it or remove the dependency array.","ArrayExpression",["211"],"'useEffect' is defined but never used.","'AiOutlneArrowRight' is defined but never used.","'useSelectedProjectValue' is defined but never used.","'setAllTasks' is assigned a value but never used.","'totalTasks' is assigned a value but never used.","'setTotalTasks' is assigned a value but never used.","'setTasks' is assigned a value but never used.","'setShowAddProject' is assigned a value but never used.","'FaBars' is defined but never used.","'handleSidebar' is assigned a value but never used.","'ShowAddProjectProvider' is defined but never used.","'FaRegCheckCircle' is defined but never used.","'FaRegCircle' is defined but never used.","'useTasks' is defined but never used.","'edit' is assigned a value but never used.","'setToggleEdit' is assigned a value but never used.","'projects' is assigned a value but never used.","'IoCalendarClearOutline' is defined but never used.","'generatePushId' is defined but never used.","'useState' is defined but never used.","'React' is defined but never used.","'FaTrashAlt' is defined but never used.","'GrCheckmark' is defined but never used.","'showSidebarProjectOptions' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","React Hook useEffect has a missing dependency: 'handleSidebarProjectOptionsMenu'. Either include it or remove the dependency array.",["212"],"'AiOutlineConsoleSql' is defined but never used.","no-global-assign","no-unsafe-negation",[601,616],"\r\n            .",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [handleShowAddProject]",{"range":"217","text":"218"},"Update the dependencies array to be: [handleSidebarProjectOptionsMenu]",{"range":"219","text":"220"},[1349,1351],"[handleShowAddProject]",[664,666],"[handleSidebarProjectOptionsMenu]"]