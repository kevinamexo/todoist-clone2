[{"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\index.js":"1","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\App.js":"2","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Sidebar.js":"3","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\MainContent\\ProjectOverlay.js":"4","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Navbar\\Navbar.js":"5","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\index.js":"6","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\helpers\\index.js":"7","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\selected-project-context.js":"8","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\openSidebarContext.js":"9","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\firebase-hooks\\index.js":"10","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\firebase.js":"11","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\projects-context.js":"12","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\constants\\index.js":"13","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\Projects.js":"14","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\IndividualProject.js":"15","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\SidebarProjectOptions.js":"16"},{"size":220,"mtime":1617567269247,"results":"17","hashOfConfig":"18"},{"size":746,"mtime":1618689744208,"results":"19","hashOfConfig":"18"},{"size":4489,"mtime":1618833043244,"results":"20","hashOfConfig":"18"},{"size":758,"mtime":1618836253154,"results":"21","hashOfConfig":"18"},{"size":3451,"mtime":1618774264980,"results":"22","hashOfConfig":"18"},{"size":634,"mtime":1618324645176,"results":"23","hashOfConfig":"18"},{"size":1042,"mtime":1618835711589,"results":"24","hashOfConfig":"18"},{"size":547,"mtime":1618398302784,"results":"25","hashOfConfig":"18"},{"size":526,"mtime":1617702371893,"results":"26","hashOfConfig":"18"},{"size":3479,"mtime":1618691005917,"results":"27","hashOfConfig":"18"},{"size":502,"mtime":1618422153400,"results":"28","hashOfConfig":"18"},{"size":484,"mtime":1618691157234,"results":"29","hashOfConfig":"18"},{"size":149,"mtime":1618225907737,"results":"30","hashOfConfig":"18"},{"size":1421,"mtime":1618835628320,"results":"31","hashOfConfig":"18"},{"size":3115,"mtime":1618835238071,"results":"32","hashOfConfig":"18"},{"size":1243,"mtime":1618836252160,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1dnn2gx",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\index.js",[],["72","73"],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\App.js",[],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Sidebar.js",["74","75"],"import React, {useState} from 'react'\r\nimport './Sidebar.css'\r\nimport {VscInbox} from 'react-icons/vsc'\r\nimport {IoTodayOutline, IoCalendarOutline} from 'react-icons/io5'\r\nimport {useOpenSidebarValue,} from '../../context'\r\nimport {AiOutlneArrowRight, AiOutlineDown, AiOutlineRight,AiOutlinePlus} from 'react-icons/ai'\r\nimport Projects from './Projects/Projects'\r\nimport {useSelectedProjectValue} from '../../context'\r\nconst Sidebar=()=> {\r\n\r\n    const [openProjects, setOpenProjects]=useState(false)\r\n    const [openLabels, setOpenLabels]= useState(false)\r\n    const [openFilters, setOpenFilters]= useState(false)\r\n    const [active,setActive]= useState('inbox')\r\n    const {openSidebar} = useOpenSidebarValue()\r\n    \r\n    const handleOpenProjects=()=>setOpenProjects(!openProjects)\r\n    const handleOpenLabels=()=>setOpenLabels(!openLabels)\r\n    const handleOpenFilters=()=>setOpenFilters(!openFilters)\r\n\r\n\r\n\r\n    \r\n    // console.log(openSidebar)\r\n    return (\r\n        <div className={`sidebar ${openSidebar ?\"show\":\"hidden-sidebar\"}`}>\r\n            <ul className=\"sidebar__times\">\r\n                <li className ={`sidebar-inbox ${active==='inbox'? 'active': undefined}`}\r\n                    onClick={()=>setActive('inbox')}\r\n\r\n                >\r\n                    <span className=\"sidebar-icon\"><VscInbox/></span>\r\n                    <span className=\"time-label\">Inbox</span>\r\n                </li>\r\n                <li className= {`sidebar-today ${active==='today'? 'active': undefined}`}\r\n                     onClick={()=>setActive('today')}\r\n                >\r\n                    <span className=\"sidebar-icon\"><IoTodayOutline/></span>\r\n                    <span  className=\"time-label\">Today</span>\r\n                </li>\r\n                <li className={`sidebar-upcoming ${active==='upcoming'? 'active': undefined}`}\r\n                     onClick={()=>setActive('upcoming')}\r\n                >\r\n                    <span className=\"sidebar-icon\"><IoCalendarOutline/></span>\r\n                    <span className=\"time-label\">Upcoming</span>  \r\n                </li>\r\n            </ul>\r\n\r\n\r\n\r\n            <div className=\"sidebar__options\">\r\n                <div className=\"sidebar-projects\">\r\n                    <div className=\"sidebar-projects-icons\">\r\n                        <span className=\"open-icon\"\r\n                            onClick={handleOpenProjects}\r\n                        >\r\n                            {openProjects?<AiOutlineDown/>: <AiOutlineRight/>}\r\n                        </span>\r\n                        <span className=\"sidebar__option-label\">\r\n                            Projects    \r\n                        </span>\r\n\r\n\r\n                        <span className=\"sidebar__add-project\">\r\n                            <AiOutlinePlus/>\r\n                        </span>\r\n                    </div>\r\n\r\n                    {openProjects && (\r\n                        <ul className=\"projects\">\r\n                            <Projects/>\r\n                        </ul>\r\n                        )\r\n                    }\r\n                    \r\n                    \r\n\r\n                \r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <div className=\"sidebar-labels\">\r\n                    <span className=\"open-icon\"\r\n                        onClick={handleOpenLabels}\r\n                    >\r\n                        {openLabels?<AiOutlineDown/>: <AiOutlineRight/>}\r\n                    </span>\r\n                    <span className=\"sidebar__option-label\">\r\n                        Labels\r\n                    </span>\r\n\r\n                    <span className=\"sidebar__add-project\">\r\n                        <AiOutlinePlus/>\r\n                    </span>\r\n\r\n                    <ul></ul>\r\n                </div>\r\n                <div className=\"sidebar-filters\">\r\n                    <span className=\"open-icon\"\r\n                        onClick={handleOpenFilters}\r\n                    >\r\n                        {openFilters?<AiOutlineDown/>: <AiOutlineRight/>}\r\n                    </span>\r\n                    <span className=\"sidebar__option-label\">\r\n                        Filters\r\n                    </span>\r\n\r\n                    <span className=\"sidebar__add-project\">\r\n                        <AiOutlinePlus/>\r\n                    </span>\r\n\r\n                   \r\n                </div>\r\n                \r\n            \r\n            \r\n            </div>\r\n\r\n            \r\n\r\n          \r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar\r\n","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\MainContent\\ProjectOverlay.js",["76"],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Navbar\\Navbar.js",["77","78"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport {FaBars} from 'react-icons/fa'\r\nimport {AiOutlineMenu, AiOutlinePlus, AiOutlineSearch} from 'react-icons/ai'\r\nimport {CgHome, CgProfile} from 'react-icons/cg'\r\nimport {IoIosTrendingUp} from 'react-icons/io'\r\nimport {VscBellDot} from 'react-icons/vsc'\r\nimport {BsQuestionCircle} from 'react-icons/bs'\r\n\r\nimport {useOpenSidebarValue} from '../../context'\r\nimport './Navbar.css'\r\nfunction Navbar() {\r\n    const [searchValue, setSearchValue] = useState('')\r\n    const [searchFocus, setSearchFocus]= useState(false)\r\n    const {openSidebar, setOpenSidebar, handleSidebar} = useOpenSidebarValue()\r\n\r\n    const searchInput= useRef()\r\n    const clearSearchFocus=(e)=>{\r\n        if (e.target!==searchInput.current){\r\n            setSearchFocus(false)\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        document.addEventListener('click', clearSearchFocus)\r\n\r\n        return ()=> document.removeEventListener('click', clearSearchFocus)\r\n\r\n    },[])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"navbar-inner\">\r\n                <ul className=\"navbar__section1\">\r\n                    <li className=\"navbar__section1-icon\"\r\n                        data-testid=\"navbar-menu-bars\"\r\n                        onClick={()=>{\r\n                            \r\n                            setOpenSidebar(!openSidebar)\r\n                            \r\n                            }\r\n                            \r\n                        }\r\n                        \r\n                    >\r\n                        <AiOutlineMenu/>\r\n                    </li>\r\n                    <li className=\"navbar__section1-icon\"><CgHome/></li>\r\n        \r\n                    <div\r\n                        role=\"button\"  \r\n                        className={openSidebar? \"hidden\":\"navbar__section1-search\"}\r\n                        onFocus={()=>setSearchFocus(true)}\r\n                    >\r\n                        <span className={searchFocus?\"hidden\": \"search-icon\"}>\r\n                            <AiOutlineSearch/>\r\n                        </span>\r\n                        <input value={searchValue} type=\"text\"\r\n                            ref={searchInput}\r\n                            onChange={(e)=>setSearchValue(e.target.value)}\r\n                            className={searchFocus? \"navbar__section1-searchInput-white\":\"navbar__section1-searchInput\"}\r\n                            data-testid=\"navbar-search\"\r\n                            placeholder=\"Find\"\r\n                                                    \r\n                            \r\n                        />\r\n                    </div>\r\n                    \r\n                </ul>\r\n\r\n            \r\n                <div className=\"navbar__section2\">\r\n                    <ul>\r\n                        <li className=\"navbar__section2-icon\"><AiOutlinePlus/></li>\r\n                        <li className=\"navbar__section2-icon\"><IoIosTrendingUp/></li>\r\n                        <li className=\"navbar__section2-icon\"><BsQuestionCircle/></li>\r\n                        <li className=\"navbar__section2-icon\"><VscBellDot/></li>\r\n                        <li className=\"navbar__section2-icon-profile\"><CgProfile/></li>\r\n                    \r\n                    </ul>\r\n                \r\n\r\n                \r\n\r\n\r\n\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\index.js",[],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\helpers\\index.js",[],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\selected-project-context.js",[],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\openSidebarContext.js",["79"],"import React, {createContext, useState, useContext} from 'react'\r\n\r\nexport const OpenSidebarContext= createContext()\r\n\r\nexport const OpenSidebarProvider= ({children})=>{\r\n    const [openSidebar, setOpenSidebar]= useState(true)\r\n    const handleSidebar=()=> setOpenSidebar(!openSidebar)\r\n\r\n    return (\r\n        <OpenSidebarContext.Provider value={{openSidebar, setOpenSidebar}}>\r\n            {children}\r\n        </OpenSidebarContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport const useOpenSidebarValue=()=> useContext(OpenSidebarContext)","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\firebase-hooks\\index.js",["80"],"import React, {useEffect, useState} from 'react'\r\nimport {firebase} from '../firebase'\r\nimport  moment from 'moment';\r\n// import { useProjectsValue } from '../context/projects-context';\r\nimport { timeFiltersExist } from '../helpers';\r\n\r\n\r\nexport const useTasks=selectedProject=>{\r\n    const [tasks, setTasks]= useState([])\r\n    const [archivedTasks, setArchivedTasks]= useState([])\r\n\r\n    useEffect=(()=>{\r\n        let unsubscribe= firebase \r\n            .firestore()\r\n            .collection('tasks')\r\n            .where('userId', '==', '2irjij20349cuu204')\r\n        \r\n        \r\n        unsubscribe =\r\n            selectedProject && !timeFiltersExist(selectedProject)\r\n                ?(unsubscribe= unsubscribe.where('projectId','==',selectedProject))\r\n                : selectedProject===\"TODAY\"\r\n                ? (unsubscribe= unsubscribe.where(\r\n                    'date', \r\n                    '==', \r\n                    moment().format('DD/MM/YYYY')\r\n                   ))\r\n                : selectedProject === 'INBOX'|| selectedProject === 0\r\n                ? (unsubscribe= unsubscribe.where(\"date\",\"==\",''))\r\n                : unsubscribe;\r\n\r\n        unsubscribe= unsubscribe.onSnapshot(snapshot => {\r\n            const newTasks= snapshot.docs.map(task=>({\r\n                id: task.id,\r\n                ...task.data(),\r\n            }))\r\n\r\n\r\n            setTasks(\r\n                selectedProject=== \"INBOX\"?\r\n                    newTasks.filter(task=>\r\n                        moment(task.date, 'DD-MM-YYY').diff(moment(), 'days') > 1 \r\n                        && task.archived !==true\r\n                    ) \r\n                : newTasks.filter(task=> task.archived!==true)\r\n\r\n            )\r\n            setArchivedTasks(newTasks.filter(task=> task.archived !==false))\r\n      })     \r\n        \r\n       return ()=> unsubscribe();\r\n    }, [selectedProject])\r\n    return {tasks, archivedTasks}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const useProjects = () => {\r\n//     const [projects, setProjects] = useState([]);\r\n  \r\n//     useEffect(() => {\r\n//         firebase\r\n//             .firestore()\r\n//             .collection('projects')\r\n//             .where('userId', '==', 'jlIFXIwyAL3tzHMtzRbw')\r\n//             .orderBy('projectId')\r\n//             .get()\r\n//             .then(snapshot => {\r\n//                 const allProjects = snapshot.docs.map(project => ({\r\n//                     ...project.data(),\r\n//                     docId: project.id,\r\n//             }));\r\n  \r\n//             if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\r\n//                 setProjects(allProjects);\r\n//             }\r\n//         });\r\n//     }, [projects]);\r\n  \r\n//     return { projects, setProjects };\r\n//   };\r\n\r\n\r\nexport const useProjects =()=>{\r\n    const [projects, setProjects]= useState([])\r\n  \r\n    useEffect(() => {\r\n        firebase\r\n            .firestore()\r\n            .collection('projects')\r\n            .where('userId', '==', '2irjij20349cuu204')\r\n            .get()\r\n            .then(snapshot => {\r\n                const allProjects = snapshot.docs.map(project => ({\r\n                  ...project.data(),\r\n                  docId: project.id,\r\n                }))\r\n                \r\n                if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\r\n                    setProjects(allProjects);\r\n                  }\r\n\r\n        })\r\n            \r\n    \r\n                        \r\n    }, [projects])\r\n\r\n    return {projects, setProjects}\r\n}\r\n\r\n\r\n","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\firebase.js",[],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\context\\projects-context.js",[],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\constants\\index.js",[],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\Projects.js",[],"C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\IndividualProject.js",["81","82","83","84"],"import React, {useState, useRef, useEffect} from 'react'\r\nimport {FaTrashAlt} from 'react-icons/fa'\r\nimport {BiDotsHorizontalRounded} from 'react-icons/bi'\r\nimport {firebase} from '../../../firebase'\r\nimport './Project.css'\r\nimport {useProjectsValue, useSelectedProjectValue} from '../../../context'\r\nimport SidebarProjectOptions from './SidebarProjectOptions'\r\n\r\nexport const IndividualProject= ({project})=> {\r\n\r\n\r\n    const [showConfirmDelete, setShowConfirmDelete] = useState(false)\r\n    const [showSidebarProjectOptions, setShowSidebarProjectOptions]= useState(false)\r\n    const [openSidebarProjectOptions, setOpenSidebarProjectOptions]= useState(false)\r\n    const {projects, setProjects}= useProjectsValue()\r\n    const {setSelectedProject}= useSelectedProjectValue()\r\n    const deleteModalRef= useRef()\r\n\r\n   \r\n\r\n    const deleteProject=(docId)=>{\r\n        firebase\r\n            .firestore()\r\n            .collection('projects')\r\n            .doc(docId)\r\n            .delete()\r\n            .then(()=>{\r\n                setProjects([...projects])\r\n                setSelectedProject('INBOX')\r\n\r\n            })\r\n    }\r\n\r\n    const handleDeleteModal=e=>{\r\n        if (deleteModalRef.current.contains(e.target)) return\r\n        \r\n        setShowConfirmDelete(false)\r\n        \r\n    }\r\n    useEffect(()=>{\r\n        document.addEventListener(\"mousedown\", handleDeleteModal)\r\n        \r\n        return () => document.removeEventListener(\"mousedown\", handleDeleteModal)\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"sidebar__individual-project\"\r\n            onMouseEnter={()=>{\r\n                setShowSidebarProjectOptions(true)\r\n                // console.log(showSidebarProjectOptions)\r\n                }\r\n            \r\n            }\r\n            onMouseLeave={()=>setShowSidebarProjectOptions(false)}\r\n            tabIndex={0}\r\n        >\r\n            <span className=\"project__dot-container\">\r\n                <div className=\"project-dot\"></div>\r\n            </span>\r\n            <span className=\"sidebar__project-name\">{project.name}</span>\r\n            \r\n            <div className=\"sidebar__project-delete-span\"\r\n                onClick={()=>{\r\n                    setOpenSidebarProjectOptions(!openSidebarProjectOptions)\r\n                    console.log(showConfirmDelete)\r\n                }\r\n                }\r\n            >\r\n                <BiDotsHorizontalRounded/>\r\n\r\n                   \r\n            </div>\r\n\r\n            {openSidebarProjectOptions && <SidebarProjectOptions project={project} setOpenSidebarProjectOptions={setOpenSidebarProjectOptions}/>}\r\n\r\n           \r\n            \r\n            <div ref={deleteModalRef} className={showConfirmDelete? \"delete-modal\":\"hidden\"} ref={deleteModalRef}>\r\n                <p>Are you sure you want to delete this project?</p>\r\n                <span className=\"delete-modal-buttons\">\r\n                    <button>Delete</button>\r\n                    <button>Cancel</button>\r\n                </span>\r\n                \r\n            </div>           \r\n            \r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndividualProject\r\n","C:\\Users\\user\\github\\todoist-clone\\todoist-clone\\src\\components\\Sidebar\\Projects\\SidebarProjectOptions.js",["85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":6,"column":9,"nodeType":"93","messageId":"94","endLine":6,"endColumn":27},{"ruleId":"91","severity":1,"message":"95","line":8,"column":9,"nodeType":"93","messageId":"94","endLine":8,"endColumn":32},{"ruleId":"91","severity":1,"message":"96","line":9,"column":19,"nodeType":"93","messageId":"94","endLine":9,"endColumn":27},{"ruleId":"91","severity":1,"message":"97","line":2,"column":9,"nodeType":"93","messageId":"94","endLine":2,"endColumn":15},{"ruleId":"91","severity":1,"message":"98","line":14,"column":41,"nodeType":"93","messageId":"94","endLine":14,"endColumn":54},{"ruleId":"91","severity":1,"message":"98","line":7,"column":11,"nodeType":"93","messageId":"94","endLine":7,"endColumn":24},{"ruleId":"91","severity":1,"message":"99","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},{"ruleId":"91","severity":1,"message":"100","line":2,"column":9,"nodeType":"93","messageId":"94","endLine":2,"endColumn":19},{"ruleId":"91","severity":1,"message":"101","line":13,"column":12,"nodeType":"93","messageId":"94","endLine":13,"endColumn":37},{"ruleId":"91","severity":1,"message":"102","line":21,"column":11,"nodeType":"93","messageId":"94","endLine":21,"endColumn":24},{"ruleId":"103","severity":1,"message":"104","line":79,"column":94,"nodeType":"105","messageId":"106","endLine":79,"endColumn":114},{"ruleId":"91","severity":1,"message":"107","line":1,"column":16,"nodeType":"93","messageId":"94","endLine":1,"endColumn":24},{"ruleId":"108","severity":1,"message":"109","line":17,"column":8,"nodeType":"110","endLine":17,"endColumn":10,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'AiOutlneArrowRight' is defined but never used.","Identifier","unusedVar","'useSelectedProjectValue' is defined but never used.","'setTasks' is assigned a value but never used.","'FaBars' is defined but never used.","'handleSidebar' is assigned a value but never used.","'React' is defined but never used.","'FaTrashAlt' is defined but never used.","'showSidebarProjectOptions' is assigned a value but never used.","'deleteProject' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleSidebarProjectOptionsMenu'. Either include it or remove the dependency array.","ArrayExpression",["114"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [handleSidebarProjectOptionsMenu]",{"range":"117","text":"118"},[642,644],"[handleSidebarProjectOptionsMenu]"]